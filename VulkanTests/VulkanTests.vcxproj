<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\Microsoft.Windows.CppWinRT.2.0.220531.1\build\native\Microsoft.Windows.CppWinRT.props" Condition="Exists('..\packages\Microsoft.Windows.CppWinRT.2.0.220531.1\build\native\Microsoft.Windows.CppWinRT.props')" />
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{07d3bdf5-12b7-449a-aceb-c67bd51bfad0}</ProjectGuid>
    <RootNamespace>VulkanTests</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <CustomBuildBeforeTargets>Build</CustomBuildBeforeTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <CustomBuildBeforeTargets>Build</CustomBuildBeforeTargets>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>C:\Dev\json\single_include;C:\sdk\TinyGLTF;C:\Users\GamingMachine\Desktop\Mestrado\Tese\VulkanTests-SSR\VulkanTests\src;C:\Dev\glm;C:\Dev\GLFW\include;C:\VulkanSDK\1.3.250.1\Include;C:\Dev\MikkTSpace;C:\sdk\nvpro_core;C:\sdk\nvpro_core\nvvk;C:\sdk\nvpro_core\third_party\fmt\include;C:\sdk\nvpro_core\nvp;C:\sdk\nvpro_core\third_party\NVTX\c\include;C:\sdk\nvpro_core\third_party\vma\include;C:\sdk\nvpro_core\nvvkhl;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard_C>Default</LanguageStandard_C>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>C:\VulkanSDK\1.3.250.1\Lib;C:\Dev\GLFW\lib-vc2022;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <CustomBuildStep>
      <Command>$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\simple_shader.vert -o $(MSBuildProjectDirectory)\shaders\simple_shader.vert.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\simple_shader.frag -o $(MSBuildProjectDirectory)\shaders\simple_shader.frag.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\g_buffer_shader.vert -o $(MSBuildProjectDirectory)\shaders\g_buffer_shader.vert.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\g_buffer_shader.frag -o $(MSBuildProjectDirectory)\shaders\g_buffer_shader.frag.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\light_shader.vert -o $(MSBuildProjectDirectory)\shaders\light_shader.vert.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\light_shader.frag -o $(MSBuildProjectDirectory)\shaders\light_shader.frag.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\ssr_shader.vert -o $(MSBuildProjectDirectory)\shaders\ssr_shader.vert.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\ssr_shader.frag -o $(MSBuildProjectDirectory)\shaders\ssr_shader.frag.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\point_light.vert -o $(MSBuildProjectDirectory)\shaders\point_light.vert.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\point_light.frag -o $(MSBuildProjectDirectory)\shaders\point_light.frag.spv</Command>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>$(MSBuildProjectDirectory)\simple_shader.frag.spv;$(MSBuildProjectDirectory)\simple_shader.vert.spv;$(MSBuildProjectDirectory)\g_buffer_shader.frag.spv;$(MSBuildProjectDirectory)\g_buffer_shader.vert.spv;$(MSBuildProjectDirectory)\light_shader.frag.spv;$(MSBuildProjectDirectory)\light_shader.vert.spv;$(MSBuildProjectDirectory)\ssr_shader.frag.spv;$(MSBuildProjectDirectory)\ssr_shader.vert.spv;$(MSBuildProjectDirectory)\point_light.frag.spv;$(MSBuildProjectDirectory)\point_light.vert.spv;%(Outputs)</Outputs>
      <TreatOutputAsContent>false</TreatOutputAsContent>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>C:\Dev\json\single_include;C:\sdk\TinyGLTF;C:\Users\GamingMachine\Desktop\Mestrado\Tese\VulkanTests-SSR\VulkanTests\src;C:\Dev\glm;C:\Dev\GLFW\include;C:\VulkanSDK\1.3.250.1\Include;C:\Dev\MikkTSpace;C:\sdk\nvpro_core;C:\sdk\nvpro_core\nvvk;C:\sdk\nvpro_core\third_party\fmt\include;C:\sdk\nvpro_core\nvp;C:\sdk\nvpro_core\third_party\NVTX\c\include;C:\sdk\nvpro_core\third_party\vma\include;C:\sdk\nvpro_core\nvvkhl;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard_C>Default</LanguageStandard_C>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>C:\VulkanSDK\1.3.250.1\Lib;C:\Dev\GLFW\lib-vc2022;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;glfw3.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <CustomBuildStep>
      <Command>$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\simple_shader.vert -o $(MSBuildProjectDirectory)\shaders\simple_shader.vert.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\simple_shader.frag -o $(MSBuildProjectDirectory)\shaders\simple_shader.frag.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\g_buffer_shader.vert -o $(MSBuildProjectDirectory)\shaders\g_buffer_shader.vert.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\g_buffer_shader.frag -o $(MSBuildProjectDirectory)\shaders\g_buffer_shader.frag.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\light_shader.vert -o $(MSBuildProjectDirectory)\shaders\light_shader.vert.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\light_shader.frag -o $(MSBuildProjectDirectory)\shaders\light_shader.frag.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\ssr_shader.vert -o $(MSBuildProjectDirectory)\shaders\ssr_shader.vert.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\ssr_shader.frag -o $(MSBuildProjectDirectory)\shaders\ssr_shader.frag.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\point_light.vert -o $(MSBuildProjectDirectory)\shaders\point_light.vert.spv
$(VK_SDK_PATH)\Bin\glslc $(MSBuildProjectDirectory)\shaders\point_light.frag -o $(MSBuildProjectDirectory)\shaders\point_light.frag.spv</Command>
    </CustomBuildStep>
    <CustomBuildStep>
      <Outputs>$(MSBuildProjectDirectory)\simple_shader.frag.spv;$(MSBuildProjectDirectory)\simple_shader.vert.spv;$(MSBuildProjectDirectory)\g_buffer_shader.frag.spv;$(MSBuildProjectDirectory)\g_buffer_shader.vert.spv;$(MSBuildProjectDirectory)\light_shader.frag.spv;$(MSBuildProjectDirectory)\light_shader.vert.spv;$(MSBuildProjectDirectory)\ssr_shader.frag.spv;$(MSBuildProjectDirectory)\ssr_shader.vert.spv;$(MSBuildProjectDirectory)\point_light.frag.spv;$(MSBuildProjectDirectory)\point_light.vert.spv;%(Outputs)</Outputs>
      <TreatOutputAsContent>false</TreatOutputAsContent>
    </CustomBuildStep>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="src\render_passes\lighting_pass.cpp" />
    <ClCompile Include="src\render_passes\reflection_pass.cpp" />
    <ClCompile Include="src\render_passes\gbuffer_pass.cpp" />
    <ClCompile Include="src\first_app.cpp" />
    <ClCompile Include="src\keyboard_movement_controller.cpp" />
    <ClCompile Include="src\main.cpp" />
    <ClCompile Include="src\RTSetup.cpp" />
    <ClCompile Include="src\systems\point_light_system.cpp" />
    <ClCompile Include="src\systems\simple_render_system.cpp" />
    <ClCompile Include="src\vt_buffer.cpp" />
    <ClCompile Include="src\vt_camera.cpp" />
    <ClCompile Include="src\vt_descriptors.cpp" />
    <ClCompile Include="src\vt_game_object.cpp" />
    <ClCompile Include="src\vt_model.cpp" />
    <ClCompile Include="src\vt_renderer.cpp" />
    <ClCompile Include="src\vt_swap_chain.cpp" />
    <ClCompile Include="src\vt_device.cpp" />
    <ClCompile Include="src\vt_pipeline.cpp" />
    <ClCompile Include="src\vt_texture.cpp" />
    <ClCompile Include="src\vt_window.cpp" />
    <ClCompile Include="src\vt_render_pass.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="src\host_device.h" />
    <ClInclude Include="src\render_passes\lighting_pass.hpp" />
    <ClInclude Include="src\render_passes\reflection_pass.hpp" />
    <ClInclude Include="src\render_passes\gbuffer_pass.hpp" />
    <ClInclude Include="src\first_app.hpp" />
    <ClInclude Include="src\keyboard_movement_controller.hpp" />
    <ClInclude Include="src\RTSetup.hpp" />
    <ClInclude Include="src\systems\point_light_system.hpp" />
    <ClInclude Include="src\systems\simple_render_system.hpp" />
    <ClInclude Include="src\vt_buffer.hpp" />
    <ClInclude Include="src\vt_camera.hpp" />
    <ClInclude Include="src\vt_descriptors.hpp" />
    <ClInclude Include="src\vt_frame_info.hpp" />
    <ClInclude Include="src\vt_game_object.hpp" />
    <ClInclude Include="src\vt_model.hpp" />
    <ClInclude Include="src\vt_renderer.hpp" />
    <ClInclude Include="src\vt_swap_chain.hpp" />
    <ClInclude Include="src\vt_device.hpp" />
    <ClInclude Include="src\vt_pipeline.hpp" />
    <ClInclude Include="src\vt_texture.hpp" />
    <ClInclude Include="src\vt_utils.hpp" />
    <ClInclude Include="src\vt_window.hpp" />
    <ClInclude Include="src\vt_render_pass.hpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="compile.bat" />
    <None Include="shaders\point_light.frag" />
    <None Include="shaders\point_light.vert" />
    <None Include="shaders\raygen.rgen" />
    <None Include="shaders\reflectionClosestHit.rchit" />
    <None Include="shaders\simple_shader.frag" />
    <None Include="shaders\simple_shader.frag.spv" />
    <None Include="shaders\simple_shader.vert" />
    <None Include="shaders\simple_shader.vert.spv" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="..\packages\Microsoft.Windows.CppWinRT.2.0.220531.1\build\native\Microsoft.Windows.CppWinRT.targets" Condition="Exists('..\packages\Microsoft.Windows.CppWinRT.2.0.220531.1\build\native\Microsoft.Windows.CppWinRT.targets')" />
  </ImportGroup>
</Project>